[{"content":"Inter chip connection Chip inter-connection technologies are adoperated to connect two chips together allowing them to operate together. The number of “connecting points” is different from one technology to another. Starting with the less-dense C4 (controlled collapse chip connection), some vendors moved to a more dense technique called Micro Bump. In this second scenario you can easily notice that the dots representing the inter-chip connections are much more dense.\nAMD 3D V-Cache is implemented with a new approach: Hybrid Bond 3D. This approach offers better connectivity (the dots are much more dense with respect to the previous scenarios), which automatically translates in more data flowing between chip in the same amount of time.\nStacking problems CPU dies, heatspreader and CPU coolers are designed with standard dimensions. This means that the height of the actual CPU die is designed to allow a perfect fit of the heatspreader and, on top of it, a perfect fit of the CPU cooler.\nNow, let’s consider the height of a standard Zen3 die (pink one), let’s call it z: this height is the standard height described earlier in this paragraph. When a new chip is stacked on top of the die the height is not z anymore.\nThis is a problem.\nNow heatspreader have to be re-designed, CPU cooler are not going to fit anymore on the same socket and this is not good either. To avoid this, AMD solved this problem by making the actual Zen3 die thinner (green one). This means that with the same height z the die has now an additional chip on top of it. Great! No coolers or heatspreaders have to be redesigned.\nMolecular perfection Chips are now stacked together. Nice. That’s exactly what AMD was looking for, but how does this new unit (die + stacked chip) stays together? What prevents them from falling apart?\nWell, physics comes to rescue: when you have two surfaces which are perfectly flat and smooth, if you bring them together they will bond together forming a new cohesive unit. That’s what Van Der Waals forces are. And that’s it!\nWhy 3D V-Cache is so fast in games? Videogames, from the computer perspective, are full of randomness. What does it mean? It means that the computer can’t predict what the player is going to do. Movements, enemies showing up, interactions, environmental changes are all random action that the player is - most of the time - in control of and that the computer has no way to predict. Each of these actions means new animations, texture to be loaded, etc.\nWhere are those information collected from? CPU cache! But CPU cache is insanely fast if compared to RAM and it is also orders of magnitude smaller (L3 Cache is in MB, while RAM is in GB).\nThe access time of the CPU cache is ~8-10 nanoseconds, while RAM access time is tipically ~10 times slower that that, hence, fetching data from RAM is slower with respect to fetching data from CPU cache. Here’s where the magic happens.\nMore data can be fetched from CPU cache, which means that the CPU can get more data in the same amount of time, which means low latency in terms of data elaboration, which means performance or frames per second. And that’s why a CPU with 3D V-Cache has an average gain, in 1080p, of 15%. This is insane. A gain like this is like going from Zen2 to Zen3, except for the fact that 3D V-Cache is not a new architecture. It’s just memory.\nUseful resources Van Der Waals forces: https://en.wikipedia.org/wiki/Van_der_Waals_force\nReference for this post: https://www.amd.com/en/technologies/3d-v-cache\n","permalink":"https://peplem.xyz/posts/04-amd-3dvcache/","summary":"Inter chip connection Chip inter-connection technologies are adoperated to connect two chips together allowing them to operate together. The number of “connecting points” is different from one technology to another. Starting with the less-dense C4 (controlled collapse chip connection), some vendors moved to a more dense technique called Micro Bump. In this second scenario you can easily notice that the dots representing the inter-chip connections are much more dense.\nAMD 3D V-Cache is implemented with a new approach: Hybrid Bond 3D.","title":"How does AMD 3D-VCache work"},{"content":"It is interesting, for the sake of knowledge, to analyze how console modchip works. Even if illegal, these modchips allowed a vast community of hackers to “pwn and escalate” the console they were related to. Beside that, analyzing how they work may teach us some useful security notions that we may not be aware of.\nCopy protection If we take a look back at cartridge-based consoles we can easily notice that those cartridge are pretty difficult to counterfeit.\nWhy? Because you’d need to have very specialized equipment to replicate one of those, because you’d need to have a blank and writable cartridge and, obviously, because it’d be expensive to do on a large scale.\nAnd there’s where CD-R came to the rescue. They were (are) cheap, easy to find and buy but this whole new way of serving digital content in the videogame industry posed a new problem for Sony: how can we protect our intellectual property?\nCD-R were easy to copy, and CD burners were already a thing when the PS1 came out.\nTo enforce digital content protection, and to ensure that only licensed developers could develop and distribute a game on the console, Sony added to their disks… a wobble! In the useful reading section there is a paper that explains why the wobble is inevitable and why optical lasers fluctuate constantly to read or write data. In this scenario however Sony used to wobble to accomplish two goals.\nThe aim of the wobble was to encode some sort of information on the disk that allowed the PS1 CD reader to check if the CD-R was original and certified from a licensed developer and also to encode the region code. During the mastering process a specific length wobble was written on disk and if the wobble on copied disk didn’t match the console BIOS then the game would not start.\nThis mechanism was very difficult to replicate because this specific wobble could be reproduced only by industrial level CD burner, consumer burners “ignored” that wobble producing invalid disks.\nModChips Modchips are essentially devices that could be soldered directly on the console motherboard to trick the PS1 into reading counterfeit copies.\nSince the PS1 firmware doesn’t look for the wobble directly (this reading is performed by the CD Decoder), but it looks for the encoded informations that this wobble contains, it is easy for a modchip sitting on top of the decoder to inject malicious code and send poisoned data to the CPU to make it pass the checks no matter what’s actually on disks.\nModchips countermeasures In the early stages of their development, modchips were sending text to the CPU at the wrong time. Game developers found a way to intercept fake info and terminate the execution by showing an error.\nLike in a cat-and-mouse game, hackers updated their modchips to only send data at the right time while sleeping during boot phase.\nUseful readings https://www.psxdev.net/forum/viewtopic.php?f=70\u0026amp;t=1266 - reverse engineering the wobble\nhttps://www.control.lth.se/fileadmin/control/Education/EngineeringProgram/FRTN10/chaghajerdi2008.pdf - wobble and optic lasers\n","permalink":"https://peplem.xyz/posts/03-how-ps1-modchip-works/","summary":"It is interesting, for the sake of knowledge, to analyze how console modchip works. Even if illegal, these modchips allowed a vast community of hackers to “pwn and escalate” the console they were related to. Beside that, analyzing how they work may teach us some useful security notions that we may not be aware of.\nCopy protection If we take a look back at cartridge-based consoles we can easily notice that those cartridge are pretty difficult to counterfeit.","title":"How Ps1 Modchip Works"},{"content":"From the book Windows10 system programming, a simple explanation of windows address space.\nThe first 64 KB of virtual address space are unusable. These are traditionally used to catch NULL pointers. Similarly, the upper 64 KB of address space, just before system space starts, are unusable as well. In short, it means the usable address space range is 128 KB less than perhaps expected. For 64-bit processes, this is completely unnoticeable.\n","permalink":"https://peplem.xyz/posts/02-address-space-made-simple/","summary":"From the book Windows10 system programming, a simple explanation of windows address space.\nThe first 64 KB of virtual address space are unusable. These are traditionally used to catch NULL pointers. Similarly, the upper 64 KB of address space, just before system space starts, are unusable as well. In short, it means the usable address space range is 128 KB less than perhaps expected. For 64-bit processes, this is completely unnoticeable.","title":"Address Space Made Simple"},{"content":"Ti è mai capitato di avere glitch grafici, cali prestazionali o crash inspiegabili delle tue app di grafica preferita o durante sessioni di gaming? In questi casi, spesso, è necessario effettuare un’installazione pulita dei driver video.\nI driver video, nel loro insieme sono la componente software che permette alla tua GPU (scheda video) di fare il suo lavoro. Operano ad un livello privilegiato del sistema operativo (kernel level o ring 0 sulla maggior parte delle architetture) e un loro malfunzionamento può portare ai problemi citati poc’anzi.\nScendiamo ora nel dettaglio per capire come effettuare un’installazione pulita (cioè da zero) di questi driver. Per andare avanti con questa guida ti serviranno:\nUltima versione dei tuoi driver video compatibili GPU NVidia: https://www.nvidia.it/Download/index.aspx?lang=it GPU AMD: https://www.amd.com/en/support GPU Intel (integrata nel tuo processore): https://www.intel.it/content/www/it/it/support/intel-driver-support-assistant.html Ultima versione di Display Driver Uninstaller (DDU): https://www.guru3d.com/files-details/display-driver-uninstaller-download.html Ultimi aggiornamenti del tuo sistema operativo: Puoi effettuare la ricerca di tali aggiornamenti direttamente dall’interfaccia del tuo sistema operativo. Nel caso in cui fossero disponibili degli aggiornamenti installali, riavvia il PC e continua con la guida, altrimenti ignora questo passaggio. Preparazione del tuo PC Prima di andare avanti è necessario scollegare il tuo PC da internet. Il motivo per cui questo passaggio è necessario è per impedire al sistema operativo di reperire in autonomia i driver video una volta disinstallati con DDU. Normalmente questa cosa non è un problema, perchè il vostro sistema operativo installerà i driver corretti, tuttavia, al fine di ottenere il massimo da questa guida è bene scollegare il PC da internet in modo tale che l’installazione dei driver sia totalmente manuale, scongiurando la possibilità di conflitti.\nUna volta disconnesso il tuo PC, procedi a riavviarlo in modalità provvisoria, seguendo le indicazioni che puoi trovare sul web su come fare questa cosa. Può capitare che i passaggi cambino tra una versione e l’altra del sistema operativo, motivo per cui non includerò qui i dettagli.\nDisinstallazione driver con DDU Una volta completati i passaggi precedenti, se hai fatto tutto correttamente, dovresti trovarti in modalità provvisoria.\nA questo punto estrai il file DDU scaricato in precedenza:\nContinua con l’estrazione dell’eseguibile:\nN.B. Io sto usando 7-zip, l’interfaccia potrebbe cambiare in base al tuo gestore di archivi (winrar, unzip, ecc).\nApri la cartella con DDU estratto:\nEsegui Display Driver Uninstaller.exe, al primo avvio ti apparirà questa finestra. Le impostazioni predefinite vanno bene, quindi fai “Chiudi” in basso a destra.\nA questo punto, dall’interfaccia di DDU seleziona 1. il produttore della tua GPU (NVidia, AMD o Intel), 2. seleziona il tipo di driver da rimuovere (Scheda video o Scheda audio), 3. fai click su Pulisci e Riavvia\nNel mio caso, ad esempio, ho una scheda grafica NVidia quindi l’interfaccia finale sarà questa:\nUna volta terminata la disinstallazione dei driver il tuo PC si riavvierà normalmente.\nInstallazione nuovi driver Se tutto è andato per il verso giusto a questo punto il tuo PC dovrebbe essere acceso normalmente, senza modalità provvisoria In questa fase devi essere ancora disconnesso da internet. Puoi procedere ora con l’installazione dei driver scaricati in precedenza dal sito del produttore. Una volta terminata l’installazione riavvia normalmente il tuo PC ancora una volta e successivamente riconnettiti ad internet!\nCongratulazioni, hai terminato tutti i passaggi! Goditi i tuoi driver video e i tuoi videogiochi preferiti!\n","permalink":"https://peplem.xyz/posts/01-installazione-pulita-driver-video/","summary":"Ti è mai capitato di avere glitch grafici, cali prestazionali o crash inspiegabili delle tue app di grafica preferita o durante sessioni di gaming? In questi casi, spesso, è necessario effettuare un’installazione pulita dei driver video.\nI driver video, nel loro insieme sono la componente software che permette alla tua GPU (scheda video) di fare il suo lavoro. Operano ad un livello privilegiato del sistema operativo (kernel level o ring 0 sulla maggior parte delle architetture) e un loro malfunzionamento può portare ai problemi citati poc’anzi.","title":"Installazione pulita driver video"}]